#Meta argument for the actual scene
container "BVH"
dimension 640 480
samples_per_pixel 4
jitter_radius 0.5
max_ray_depth 0
ambient_light [1 1 1]

# Comme gluPerspective.
Perspective 30.0 1.33 3 20

# Comme gluLookAt.
LookAt  0  1.25  15 # position de l'oeil
        0  0 0 # position du focus
        0 0.992278 -0.124035 # Vecteur up

Material "cage"
    "texture_albedo" "data/assets/texture/cage.bmp"
    "color_albedo" [0.6 0.6 0.6]
    "k_ambient"   1.0
    "k_diffuse"   0
    "k_specular"  0
    "shininess" 1
    "metallic" 1
    "k_refraction" 0
        "refractive_index"   1.0
    "k_reflection" 0

###############################################################################

## SPHERE ##

PushMatrix
    Translate 2 2 0
    Rotate 270 0 1 0
    Sphere 0.75 "cage"
PopMatrix

PushMatrix
    Translate 4 2 0
    Rotate 90 1 0 0
    Sphere 0.75 "cage"
PopMatrix

PushMatrix
    Translate 4 0 0
    Rotate 90 0 1 0
    Sphere 0.75 "cage"
PopMatrix

PushMatrix
    Translate 2 0 0
    Sphere 0.75 "cage"
PopMatrix

## Cylindre ##

PushMatrix
    Translate -4 1 0
    Rotate 270 0 1 0
    Cylinder 0.75 1.5 "cage"
PopMatrix

PushMatrix
    Translate -2 1 0
    Rotate 90 0 1 0
    Cylinder 0.75 1.5 "cage"
PopMatrix

## Quad ##

PushMatrix
    Translate 0 -3 0
    Rotate -90 1 0 0
    Quad 3 "cage"
PopMatrix

## Mesh ##
PushMatrix
    Translate 0 2 0
    Scale 0.75 0.75 0.75
    Rotate 90 0 0 1
    Mesh "data/assets/mesh/cube.obj" "cage"
PopMatrix

PushMatrix
    Translate 0 0 0
    Scale 0.75 0.75 0.75
    Mesh "data/assets/mesh/cube.obj" "cage"
PopMatrix

###############################################################################
# Spécification pour une source de lumière :
# La syntaxe basique est `PointLight x y z`, suivi par une liste de paramètres
# (à partir de laquelle la classe PointLight récupère ses valeurs).

#Lumière blanche
SphericalLight 0 0 0
    "emission" [0.6 0.6 0.6]    # couleur [r g b]
    "radius" 0
    